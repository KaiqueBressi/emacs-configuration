package home_refi.test_contexts

import org.camunda.bpm.engine.test.assertions.ProcessEngineAssertions.assertThat

import org.camunda.bpm.engine.test.Deployment
import org.camunda.bpm.engine.test.ProcessEngineRule
import org.junit.Rule
import org.junit.Test
import home_refi.tests.helpers.FluxoHomeTestUtils

@Deployment(resources = ["./home_refi/FluxoHome.bpmn", "./home_refi/DecisoesFluxoHome.dmn"])
class TrocaImovel {
    @Rule @JvmField
    var processEngineRule = ProcessEngineRule()

    private val utils = FluxoHomeTestUtils()

    @Test
    fun OperacaoReprovadaPeloGeodeathFicaEmTrocaImovel() {
        val variables = utils.variablesForTrocaImovelStart()

        val processInstance = utils.startProcess(variables)

        assertThat(processInstance).isWaitingAt("TrocaImovel")
    }

    @Test
    fun OperacaoReprovadaEmPreLaudoFicaEmTrocaImovel() {
        val variables = utils.variablesForPreLaudoStart()
        val processInstance = utils.startProcess(variables)

        utils.completePreLaudoTask("REJECTED")

        assertThat(processInstance).isWaitingAt("TrocaImovel")
    }

    @Test
    fun OperacaoReprovadaEmPreLaudoQuandoCompletaTrocaImovelVaiParaPreLaudo() {
        val variables = utils.variablesForPreLaudoStart()
        variables.put("geodeath_decision", "error")
        val processInstance = utils.startProcess(variables)
        utils.completePreLaudoTask("REJECTED")

        utils.completeTaskByDefinitionKey("TrocaImovel")

        assertThat(processInstance).isWaitingAt("PreLaudo")
    }
}
