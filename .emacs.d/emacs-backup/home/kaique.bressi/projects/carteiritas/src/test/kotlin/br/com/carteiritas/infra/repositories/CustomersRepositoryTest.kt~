package br.com.creditas.carteiritas

import br.com.creditas.carteiritas.domain.Customer
import br.com.creditas.carteiritas.domain.CustomerId
import br.com.creditas.carteiritas.domain.Assignment
import br.com.creditas.carteiritas.domain.AssignmentId
import br.com.creditas.carteiritas.infra.repositories.CustomersRepository
import java.util.*
import java.time.LocalDateTime
import org.amshove.kluent.`should be`
import org.amshove.kluent.`should equal`
import org.amshove.kluent.shouldBe
import org.amshove.kluent.shouldContainSame
import org.junit.Test
import org.junit.runner.RunWith
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.boot.test.context.SpringBootTest
import org.springframework.test.context.junit4.SpringRunner

@RunWith(SpringRunner::class)
@SpringBootTest
class CustomersRepository {
    @Autowired
    private lateinit var customersRepository: CustomersRepository

    @Test
    fun `Test with everything is okay if repository`() {
        val customerId = CustomerId(UUID.randomUUID(), "home-refi")

        val assignments: List<Assignment> = listOf(Assignment(AssignmentId(customerId, UUID.randomUUID())))
        val customer = Customer(customerId, assignments)

        customersRepository.save(customer)
    }
}
