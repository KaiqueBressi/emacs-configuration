from hermes.consumer.core.home_refi.handlers.base import Base
from hermes.infra.outbound.client import Client as OutboundClient
from hermes.infra.monitoring import telemetry
from hermes.application.workers.account.unassign_contact import unassign_contact
from hermes.application.workers.account.assign_contact import assign_contact
from hermes.domain.contact.enums import ProductType


class ApplicationAssigned(Base):
    name = 'home-operation-assigned'

    def __init__(self):
        self.__outbound_client = OutboundClient()
        super(ActivityAssigned, self).__init__()

    def handle(self, message):
        contact = self.fetch_contact(reference=message['operation_id'])

        if not contact:
            telemetry(component='activity_assigned', status='error', reason='contact_not_found')
            return None

        assign_contact.delay(
            params={
                'reference': message['operation_id'],
                'product': ProductType.HOME_REFI.value,
                'origin': 'journey',
                'consultant_id': message['consultant_id']
            }
        )

        self.__outbound_client.track(contact.id, event_name='Carteirizado Por Comercial')
        telemetry(component='activity_assigned', status='success')
