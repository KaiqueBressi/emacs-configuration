require 'logger'
require 'json'
require 'concurrent'
require 'httparty'

class Camunda
  include HTTParty

  logger ::Logger.new($stdout)

  base_uri 'https://api.stg.creditas.io/v0/journey-v2'

  headers 'Authorization' => "Bearer #{ENV.fetch('TOKEN')}", 'Content-Type' => 'application/json'
end

def generate_body
  JSON.dump(
    {
      "sourceProcessDefinitionId" => "FluxoHome:25:d2063b9a-ef95-11e9-9e71-0242ac110002",
      "targetProcessDefinitionId" => "FluxoHome:27:5065fd29-f446-11e9-835f-0242ac110002"
    }
  )
end

def migration_body(migration_plan)
  JSON.dump(
    {
      "migrationPlan" => migration_plan,
      "processInstanceQuery" => {
        "processDefinitionId" => "FluxoHome:25:d2063b9a-ef95-11e9-9e71-0242ac110002"
      },
    }
  )
end

migration_plan = Camunda.post("/engine-rest/migration/generate", body: generate_body).parsed_response
puts migration_plan.to_json

puts "Tem certeza que deseja rodar a migração? Yes/No"

yesorno = gets.chomp
exit unless yesorno == "yes"

response = Camunda.post("/engine-rest/migration/executeAsync", body: migration_body(migration_plan))
puts response
