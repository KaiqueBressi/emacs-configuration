require 'logger'
require 'json'
require 'concurrent'
require 'httparty'

class Camunda
  include HTTParty

  logger ::Logger.new($stdout)

  base_uri 'https://api.stg.creditas.io/v0/journey-v2'
  headers 'Authorization' => "Bearer #{ENV.fetch('TOKEN')}", 'Content-Type' => 'application/json'
end

def modify_body(process_instance_ids)
  JSON.dump(
    {
      "processDefinitionId" => "FluxoHome:23:b716ec6e-dfb8-11e9-acc7-0242ac110002",
      "instructions" => [
        {
          "type" => "cancel",
          "activityId" => "PortfolioAssignments",
          "cancelCurrentActiveActivityInstances" => false
        },
      ],
      "processInstanceIds" => process_instance_ids,
    }
  )
end

pool = Concurrent::FixedThreadPool.new(128, fallback_policy: :caller_runs)

tasks_to_update = Camunda.get("/engine-rest/external-task?topicName=portfolio-assignments")
process_instance_ids = tasks_to_update.map { |task| task['processInstanceId'] }

response = Camunda.post("/engine-rest/modification/executeAsync", body: modify_body(process_instance_ids))
puts response
